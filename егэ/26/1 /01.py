'''
Системный администратор раз в неделю создаёт архив пользовательских файлов. 
Однако объём диска, куда он помещает архив, может быть меньше, чем суммарный объём архивируемых файлов.

Известно, какой объём занимает файл каждого пользователя.
Администратор сохраняет файлы по следующему правилу: 
1) выбирается файл максимального размера, который может быть записан на диск, 
2) выбирается файл минимального размера, который может быть записан на диск. 
Данный сценарий повторяется до тех пор, пока на диск нельзя будет записать ни одного из оставшихся файлов.

Входные данные.
В первой строке входного файла находятся два числа: S – размер свободного места на диске (натуральное число, не превышающее 100 000)
N – количество пользователей (натуральное число, не превышающее 1000).
В следующих N строках находятся значения объёмов файлов каждого пользователя 
(все числа натуральные, не превышающие 1000), каждое в отдельной строке.

Запишите в ответе два числа:
сначала наибольшее число пользователей, чьи файлы могут быть помещены в архив, 
затем размер последнего сохраненного файла.

Пример входного файла:
100 5
80 
30
10
5
7

При таких исходных данных можно сохранить файлы трех пользователей. 
Объёмы этих трех файлов 80, 5 и 10. 
Последний выбранный файл имеет размер 10 , 
поэтому ответ для приведённого примера: 3, 10
'''

with open("26.txt") as f:
    s, n = map(int, f.readline().split())
    xs = sorted([int(x) for x in f]) # сортируем список по восрастанию
    res = [] #
    while True:
        if (sum(res) + xs[-1]) > s and (sum(res) + xs[0]) > 0: # если ни один файл не вмещается
            break
        else:
            if (sum(res) + xs[-1]) > s:
                continue
            else:
                res += [xs[-1]]
                xs.pop()
            if (sum(res) + xs[0]) > s:
                continue
            else:
                res += [xs[0]]
                xs.pop(0)
print(len(res), res[-1])


