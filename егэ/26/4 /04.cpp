/*
Система наблюдения ежеминутно фиксирует вход и выход посетителей магазина (в минутах, прошедших от начала суток). 
Считается, что в моменты фиксации входа и выхода посетитель находится в магазине.
Нулевая минута соответствует моменту открытия магазина, который работает 24 ч в сутки без перерыва. 
Менеджер магазина анализирует данные системы наблюдения за прошедшие сутки, и выявляет отрезки времени наибольшей длины,
в течение которых число посетителей, находящихся в магазине, не изменялось.
Далее менеджер выбирает пики посещаемости — промежутки времени, когда количество посетителей в магазине было наибольшим.
Пиков посещаемости в течение суток может быть несколько.

Входной файл содержит время входа и выхода каждого посетителя магазина. 
Определите, сколько пиков посещаемости было в течение суток, и укажите число посетителей в момент пика посещаемости.

Входные данные:
В первой строке входного файла находится натуральное число N (N < 10000) - количество посетителей магазина.
Следующие N строк содержат пары чисел, обозначающих соответственно время входа и время выхода посетителя (все числа натуральные, не превышающие 1440).
Запишите в ответе два натуральных числа: сначала найденное количество пиков посещаемости, а затем число посетителей в момент пика посещаемости.

Типовой пример организации данных во входном файле:
6
10 50
100 150
110 155
120 160
130 170
151 170
При таких исходных данных было два пика посещаемости: в отрезки времени со 130 по 150 минуты и со 151 по 155 минуты. Число посетителей в момент пика посещаемости равно 4. 
*/

#include <bits/stdc++.h>
using namespace std;

#define fast_cin() \
    ios_base::sync_with_stdio(false); \
    cin.tie(NULL); \
    cout.tie(NULL)

int main() {
    fast_cin();
    ifstream f("26.txt");
    int n; f >> n;
    vector <int> all(24 * 60);
    for (int i = 0; i != n; i++) {
        int in, out; f >> in >> out; 
        all[in]++; all[out]--;
    }
    int cnt = 0;
    int mx = -1000000;
    for (int i = 0; i != 1440; i++) {
        cnt += all[i];
        mx = max(mx, cnt);
    }
    cnt = 0;
    int k = 0;
    for (int i = 0; i != 1440; i++) {
        cnt += all[i];
        if (cnt == mx && all[i] != 0) {
            k++;
        }
    }
//    for (int i = 0; i != all.size(); i++) {
//        cout << all[i] << " ";
//    }
    cout << k << " " << mx << "\n";
    return 0;
}
